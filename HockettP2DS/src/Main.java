
import java.util.Random;

/**
     * Class Name: Main
     * Class Author: Tyler Hockett
     * **************************
     * Purpose of the Class
     * Interact with the GUI to 
     * fill the link list and search for
     * desired number
     * **************************
     * Date: 9/19/2017 USA
     * **************************
     * Date Changed:
     * **************************
     * Look At This!
     * Just like in project one I 
     * come accross a point in my code
     * where the generated code for the 
     * gui seems to cause a fault
     * I don't know if its something I have done
     * or if it is even something I can fix.
     * 104-107 for my notes
     * **************************
     */
public class Main extends javax.swing.JFrame {

    Random rand=new Random();
    LinkList first;
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFind = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        lblFound = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnFind.setText("Search");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFound)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(btnFind)))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addGap(79, 79, 79)
                .addComponent(lblFound)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 /**
     * Method Name: btnFindActionPerformed
     * Method Author: Tyler Hockett
     * **************************
     * Purpose of the method
     * generate the list of numbers
     * with random int values
     * then search through it for the 
     * desired value
     * **************************
     * Date: 9/19/2017 USA
     * **************************
     */
    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
    String find=txtFind.toString();
    for(int i=0;i<500;i++)
        {
            addLink(rand.nextInt());
        }
    //for some reason the program makes it to this point then then stops before 
    int locate=Integer.parseInt(find);
    //this point...going step by step it never makes it to my search method.
    search(locate);

    }//GEN-LAST:event_btnFindActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
     /**
     * Method Name: addLink
     * Method Author: Tyler Hockett
     * **************************
     * Purpose of the method
     * to add a value to the linklist
     * **************************
     * Date: 9/19/2017 USA
     * **************************
     */
    public void addLink(int myValue)
    {
         if(first==null)
         {
            LinkList temp=new LinkList();
            temp.value=myValue;
            first=temp;
         }else
         {
         recAdd(myValue, first);
         }
    }
         /**
     * Method Name: recAdd
     * Method Author: Tyler Hockett
     * **************************
     * Purpose of the method
     * to recursively check and add values
     * to the next linklist node
     * **************************
     * Date: 9/19/2017 USA
     * **************************
     */
    private void recAdd(int value, LinkList myLink)
    {
        if(myLink.nextLL==null)
        {
            LinkList temp = new LinkList();
            temp.value=value;
            myLink.nextLL=temp;
        }else
        {
            recAdd(value, myLink.nextLL);
        }
    }
         /**
     * Method Name: search
     * Method Author: Tyler Hockett
     * **************************
     * Purpose of the method
     * to check the linklist for the 
     * desired value
     * **************************
     * Date: 9/19/2017 USA
     * **************************
     */
    public String search(int find)
    {
        String answer="";
        boolean found=false;
        recSearch(find, first);
        if(found==true)
        {
            answer="The number was found.";
        }else
        {
            answer="The number was not found.";
        }
        return answer;
    }
         /**
     * Method Name: addLink
     * Method Author: Tyler Hockett
     * **************************
     * Purpose of the method
     * to recursively step through to the
     * next node in line
     * returns a boolean flag for if it is found
     * **************************
     * Date: 9/19/2017 USA
     * **************************
     */
    private boolean recSearch(int find, LinkList curList)
    {
        boolean answer=false;
        if(curList.value==find)
        {
            answer=true;
        }else if(curList.nextLL!=null)
        {
           answer=recSearch(find, curList.nextLL);
        }
        return answer;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JLabel lblFound;
    private javax.swing.JTextField txtFind;
    // End of variables declaration//GEN-END:variables
}
